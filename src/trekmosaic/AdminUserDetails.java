/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package trekmosaic;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

public class AdminUserDetails extends javax.swing.JFrame {

    /**
     * Creates new form AdminUserDetails
     */
    public AdminUserDetails() {
        initComponents();
        getUserData();
        getTrekData();
        getGearDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gearTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        trektable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        usersTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        RefreshButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1080, 720));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setMaximumSize(new java.awt.Dimension(1080, 720));
        jPanel1.setMinimumSize(new java.awt.Dimension(1080, 720));
        jPanel1.setPreferredSize(new java.awt.Dimension(1080, 720));
        jPanel1.setLayout(null);

        gearTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        gearTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name of gear", "feature1", "feature2", "feature3", "price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(gearTable);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(530, 390, 520, 220);

        trektable.setBackground(new java.awt.Color(204, 204, 204));
        trektable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        trektable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "name", "location", "price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(trektable);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(10, 390, 490, 220);

        usersTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        usersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "username", "email", "age", "location"
            }
        ));
        jScrollPane3.setViewportView(usersTable);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(10, 120, 730, 220);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Registered User Deatils");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 80, 240, 50);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Gear Details ");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(530, 350, 130, 40);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Details about treks");
        jLabel4.setToolTipText("");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(10, 360, 220, 40);

        backButton.setText("HOME");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        jPanel1.add(backButton);
        backButton.setBounds(190, 640, 100, 40);

        RefreshButton.setText("REFRESH");
        RefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButtonActionPerformed(evt);
            }
        });
        jPanel1.add(RefreshButton);
        RefreshButton.setBounds(10, 640, 140, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/bgmtresizeddddd.jpg"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 1080, 720);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1080, 720);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        AdminUserDetails.this.dispose();
        AdminDashboard ad = new AdminDashboard();
        ad.setLocationRelativeTo(null);
        ad.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void RefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButtonActionPerformed
        getUserData();
        getTrekData();
        getGearDetails();
    }//GEN-LAST:event_RefreshButtonActionPerformed
    void getTrekData(){
        try {
            Connection con = DatabaseConnection.connect();
            String query = "SELECT name, location, price age FROM trek_data ";
            PreparedStatement stm = con.prepareStatement(query);
            ResultSet result = stm.executeQuery();

            DefaultTableModel model = (DefaultTableModel) trektable.getModel();
            model.setRowCount(0);

            while (result.next()) {
                String Trekname = result.getString("name");
                String trekLoc = result.getString("location");

                int price = result.getInt("age");

                model.addRow(new Object[]{Trekname, trekLoc, price});
            }

        } catch (SQLException ex) {
          
        }
    }
    void getGearDetails(){
        try {
            
            Connection con = DatabaseConnection.connect();
       
            String Gearquery = "SELECT name, feature1, feature2, feature3, price FROM gear_data ";
            PreparedStatement stm2 = con.prepareStatement(Gearquery);
            ResultSet result2 = stm2.executeQuery();
            System.out.println("query exece");
            DefaultTableModel model = (DefaultTableModel) gearTable.getModel();
            
            model.setRowCount(0);
            while (result2.next()) {
                String GearName = result2.getString("name");
                String feature1 = result2.getString("feature1");
                String feature2 = result2.getString("feature2");
                String feature3 = result2.getString("feature3");
                int price = result2.getInt("price");
                model.addRow(new Object[]{GearName, feature1, feature2, feature3, price});
            }

        } catch (SQLException ex) {
          
        }
    }
    void getUserData() {

        try {
            Connection con = DatabaseConnection.connect();
            String query = "SELECT name, email, username, location, age FROM user_data ";
            PreparedStatement stm = con.prepareStatement(query);
            ResultSet result = stm.executeQuery();

            DefaultTableModel model = (DefaultTableModel) usersTable.getModel();
            model.setRowCount(0);

            while (result.next()) {
                String name = result.getString("name");
                String loc = result.getString("location");
                String username = result.getString("username");
                String email = result.getString("location");
                int age = result.getInt("age");

                model.addRow(new Object[]{name, username, email, age, loc});
            }

        } catch (SQLException ex) {
          
        }
        
        
    }
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminUserDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminUserDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminUserDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminUserDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminUserDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton RefreshButton;
    private javax.swing.JButton backButton;
    private javax.swing.JTable gearTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable trektable;
    private javax.swing.JTable usersTable;
    // End of variables declaration//GEN-END:variables
}
